<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="graduate.dao.UserDao">
    <!-- int userId;
     Integer userId = null;-->
    <resultMap id="userMap" type="graduate.model.User">
        <result column="userId" property="userId" javaType="Integer"></result>
        <result column="loginName" property="loginName" javaType="String"></result>
        <result column="loginPwd" property="loginPwd" javaType="String"></result>
        <result column="userName" property="userName" javaType="String"></result>
        <result column="userState" property="userState" javaType="String"></result>
        <result column="loginTime" property="loginTime" javaType="String"></result>
        <result column="loginNumber" property="loginNumber" javaType="String"></result>
    </resultMap>

    <!--新增用户--> <!--useGeneratedKeys是开启使用自增的方式
    keyProperty是自增id填回到java bean里的那个字段-->

    <!--parameterType="graduate.model.User" -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="user.userId" >
        insert into db_user
        (
        loginName,
        loginPwd,
        userName,
        userState,
        createdTime,
        loginTime,
        loginNumber
        )
        values
        (
        #{user.loginName},
        #{user.loginPwd},
        #{user.userName},
        #{user.userState},
        #{user.createdTime},
        #{user.loginTime},
        #{user.loginNumber}
        )
    </insert>

    <!--删除用户-->
    <delete id="deleteUser">
        delete   from db_user where userId=#userId#
    </delete>

    <!--更新用户-->
    <update id="updateUser">
       update db_user SET
        userName=#{user.userName},
        loginPwd=#{user.loginPwd},
         userState=#{user.userState},
        createdTime=#{user.createdTime},
        loginTime=#{user.loginTime},
         loginNumber=#{user.loginNumber}
        where userId=#{user.userId}

    </update>

    <!--根据用户id查询用户-->
    <select id="selectUserById" resultType="graduate.model.User">
        select * from db_user where userId=#{userId}
    </select>

    <!--根据用户登录名查询用户-->
    <select id="selectUserByLoginName" resultType="graduate.model.User">
        select * from db_user where loginName=#{loginName}
    </select>

    <!--查询所有会员列表-->
    <select id="query" resultMap="userMap">
        select * from db_user where  limit #{pageStart},#{pageEnd}
    </select>

    <!--根据状态查询所有会员列表-->
    <select id="selectUserByStateList" resultMap="userMap">
        select * from db_user where userState=#{userState} limit #{pageStart},#{pageEnd}
    </select>

    <select id="findCount" resultType="int">
        select COUNT(1) from db_user
    </select>


</mapper>
